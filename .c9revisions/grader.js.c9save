{"ts":1373176488110,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1373176442305,"patch":[[{"diffs":[[1,"#!/usr/bin/env node\r\n/*\r\nAutomatically grade files for the presence of specified HTML tags/attributes.\r\nUses commander.js and cheerio. Teaches command line application development\r\nand basic DOM parsing.\r\n\r\nReferences:\r\n\r\n + cheerio\r\n   - https://github.com/MatthewMueller/cheerio\r\n   - http://encosia.com/cheerio-faster-windows-friendly-alternative-jsdom/\r\n   - http://maxogden.com/scraping-with-node.html\r\n\r\n + commander.js\r\n   - https://github.com/visionmedia/commander.js\r\n   - http://tjholowaychuk.com/post/9103188408/commander-js-nodejs-command-line-interfaces-made-easy\r\n\r\n + JSON\r\n   - http://en.wikipedia.org/wiki/JSON\r\n   - https://developer.mozilla.org/en-US/docs/JSON\r\n   - https://developer.mozilla.org/en-US/docs/JSON#JSON_in_Firefox_2\r\n*/\r\n\r\nvar fs = require('fs');\r\nvar program = require('commander');\r\nvar cheerio = require('cheerio');\r\nvar HTMLFILE_DEFAULT = \"index.html\";\r\nvar CHECKSFILE_DEFAULT = \"checks.json\";\r\n\r\nvar assertFileExists = function(infile) {\r\n    var instr = infile.toString();\r\n    if(!fs.existsSync(instr)) {\r\n        console.log(\"%s does not exist. Exiting.\", instr);\r\n        process.exit(1); // http://nodejs.org/api/process.html#process_process_exit_code\r\n    }\r\n    return instr;\r\n};\r\n\r\nvar cheerioHtmlFile = function(htmlfile) {\r\n    return cheerio.load(fs.readFileSync(htmlfile));\r\n};\r\n\r\nvar loadChecks = function(checksfile) {\r\n    return JSON.parse(fs.readFileSync(checksfile));\r\n};\r\n\r\nvar checkHtmlFile = function(htmlfile, checksfile) {\r\n    $ = cheerioHtmlFile(htmlfile);\r\n    var checks = loadChecks(checksfile).sort();\r\n    var out = {};\r\n    for(var ii in checks) {\r\n        var present = $(checks[ii]).length &gt; 0;\r\n        out[checks[ii]] = present;\r\n    }\r\n    return out;\r\n};\r\n\r\nvar clone = function(fn) {\r\n    // Workaround for commander.js issue.\r\n    // http://stackoverflow.com/a/6772648\r\n    return fn.bind({});\r\n};\r\n\r\nif(require.main == module) {\r\n    program\r\n        .option('-c, --checks &lt;check_file&gt;', 'Path to checks.json', clone(assertFileExists), CHECKSFILE_DEFAULT)\r\n        .option('-f, --file &lt;html_file&gt;', 'Path to index.html', clone(assertFileExists), HTMLFILE_DEFAULT)\r\n        .parse(process.argv);\r\n    var checkJson = checkHtmlFile(program.file, program.checks);\r\n    var outJson = JSON.stringify(checkJson, null, 4);\r\n    console.log(outJson);\r\n} else {\r\n    exports.checkHtmlFile = checkHtmlFile;\r\n}\r\n"]],"start1":0,"start2":0,"length1":0,"length2":2395}]],"length":2395,"saved":false}
{"ts":1373212418302,"patch":[[{"diffs":[[0," module) {\r\n"],[1,"    console.log(\"Starting to parse args\")\r\n"],[0,"    program\r"]],"start1":1900,"start2":1900,"length1":24,"length2":67},{"diffs":[[0,"ess.argv);\r\n"],[1,"    console.log(\"Finished parsing args\")\r\n"],[0,"    var chec"]],"start1":2221,"start2":2221,"length1":24,"length2":66}]],"length":2480,"saved":false}
{"ts":1373212593665,"patch":[[{"diffs":[[0,".length "],[-1,"&gt;"],[1,">"],[0," 0;\r\n   "]],"start1":1654,"start2":1654,"length1":20,"length2":17},{"diffs":[[0,"-checks "],[-1,"&lt;"],[1,"<"],[0,"check_fi"]],"start1":1987,"start2":1987,"length1":20,"length2":17},{"diffs":[[0," <check_file"],[-1,"&gt;"],[1,">"],[0,"', 'Path to "]],"start1":1994,"start2":1994,"length1":28,"length2":25},{"diffs":[[0,"ile "],[-1,"&lt;"],[1,"<"],[0,"html"]],"start1":2103,"start2":2103,"length1":12,"length2":9},{"diffs":[[0,"file"],[-1,"&gt;"],[1,">"],[0,"', '"]],"start1":2113,"start2":2113,"length1":12,"length2":9}]],"length":2465,"saved":false}
